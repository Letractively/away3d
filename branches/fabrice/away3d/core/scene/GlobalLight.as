//Fabrice Closier, www.closier.nl, 2007//package away3d.core.scene{	import away3d.core.math.Number3D;	import away3d.core.math.Number2D;	import flash.display.*;	import flash.geom.Matrix;	import away3d.register.AWClass;		public class GlobalLight extends AWClass	{		private var phongmap:BitmapData;		private var aLights:Array;				function GlobalLight(lights:Array = null)		{			this.register("GLOBALLIGHT");			this.aLights = new Array();			if(lights != null && lights.length >0){				this.aLights = this.aLights.concat(lights);			} else{				this.aLights.push( {id:"default", color:0xFF0000, position:new Number3D(.5,.5,.5) });			}			// now we do only one source light, next version we support multiple light sources			this.generateSource();		}				private function generateSource():void		{			// 768 is hardcoded. we need to rescale according to mesh boundingbox ???			// it offer in many cases enough resolution, and since uts rendered only once it should be enough.			// only one light for this first code...			// for loop in this.aLights[0].color required when more			this.phongmap = new BitmapData(768, 768, false, 0xFFFFFF);			var tmpsprite = new Sprite();			var mat:Matrix = new Matrix();			mat.createGradientBox(768, 768, 0, 0, 0);			var color:uint = this.aLights[0].color;			tmpsprite.graphics.beginGradientFill(GradientType.RADIAL, [color, color, 0x000000], [80, 0, 10], [0, 120, 255], mat, "pad");			tmpsprite.graphics.drawRect(0,0,768, 768);			this.phongmap.draw(tmpsprite,null,null,null,this.phongmap.rect,true);		}				public function getOffsets(position:Number3D):Number2D		{			//position = mesh position			//trace(position);			//here moet offset berekend worden t.o.v mesh			return  new Number2D(this.phongmap.width * ((aLights[0].position.x*.5) + .5), this.phongmap.height * (1 - ((-(aLights[0].position.y)*.5) + .5))             );		}				public function get source():BitmapData		{			return this.phongmap;		}				public override function set x(val:Number):void		{			this.aLights[0].position.x = val;		}		public override function set y(val:Number):void		{			this.aLights[0].position.y = val;		}		public function set z(val:Number):void		{			this.aLights[0].position.z = val;		}					}}