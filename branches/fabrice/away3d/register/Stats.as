package away3d.register{	import flash.ui.ContextMenu;    import flash.ui.ContextMenuItem;    import flash.ui.ContextMenuBuiltInItems;    import flash.events.ContextMenuEvent;	import flash.display.Sprite;	import flash.text.TextField;	import flash.text.TextFormat;	import flash.text.TextFieldAutoSize;	import flash.display.Stage;	import flash.geom.Matrix;	import flash.net.navigateToURL;    import flash.net.URLRequest;	import flash.events.MouseEvent;    import flash.events.Event;    import flash.filters.DropShadowFilter;		public class Stats extends Sprite	{		public static var instance:Stats=new Stats();		private static var oStats:Object=new Object  ;		private static var totalFaces:int=0;		private static var meshes:int=0;		private static var aTypes:Array = new Array();		private static var contextmenu:ContextMenu;		public static var scopeMenu:Sprite = null;		public static var displayMenu:Sprite = null;		public static var stage:Stage;				private static const VERSION:String = "1";		private static const REVISION:String = "0.0.1";		private static const APPLICATION_NAME:String = "Away3D.com";				function Stats()		{						}				public function generateMenu(scope:Sprite, stage:Stage):void		{			Stats.scopeMenu = scope;			Stats.contextmenu = new ContextMenu();			Stats.stage = stage;			var menutitle:String = Stats.APPLICATION_NAME+"\tv" + Stats.VERSION+"."+Stats.REVISION;			var menu:ContextMenuItem = new ContextMenuItem(menutitle, true, true, true);			var menu2:ContextMenuItem = new ContextMenuItem("Away3D Project stats", true, true, true);			var menu3:ContextMenuItem = new ContextMenuItem(" ");			Stats.contextmenu.customItems = [menu2, menu, menu3];			menu.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, Stats.instance.visiteWebsite);			menu2.addEventListener(ContextMenuEvent.MENU_ITEM_SELECT, Stats.instance.displayStats);			Stats.scopeMenu.contextMenu = Stats.contextmenu;        }		//Redirect to site		public function visiteWebsite(e:ContextMenuEvent):void 		{			var url:String = "http://www.away3d.com";            var request:URLRequest = new URLRequest(url);            try {              				navigateToURL(request);            } catch (e:Error) {            }		}		//Displays stats        public function displayStats(e:ContextMenuEvent):void		{			 if(!Stats.displayMenu){				Stats.instance.generateSprite();				Stats.instance.addEventMouse();				Stats.instance.applyShadow();				// eventually load a picto of the logo from away3d.com				// + credits btn + contact. Like any software			 }        }		//Mouse Events		private function addEventMouse():void		{  			Stats.scopeMenu.addEventListener(MouseEvent.MOUSE_DOWN, Stats.instance.onMouseIsDown);		}		private function onMouseIsDown(me:MouseEvent):void		{ 			Stats.scopeMenu.removeEventListener(MouseEvent.MOUSE_DOWN, Stats.instance.onMouseIsDown);			Stats.scopeMenu.removeChild(Stats.displayMenu);			Stats.displayMenu = null;		}		//drawing the stats container		private function generateSprite():void		{  		  			Stats.displayMenu = new Sprite();						var myMatrix:Matrix = new Matrix();    		myMatrix.rotate(90 * Math.PI/180); 			Stats.displayMenu.graphics.beginGradientFill("linear", [0x333366, 0xCCCCCC], [1,1], [0,255], myMatrix, "pad", "rgb", 0);			Stats.displayMenu.graphics.drawRect(0, 0, 250, 350);						Stats.displayMenu.graphics.beginFill(0x666666);			Stats.displayMenu.graphics.drawRect(3, 3, 244, 20);			Stats.scopeMenu.addChild(Stats.displayMenu);			Stats.displayMenu.x -= Stats.displayMenu.width/2;			Stats.displayMenu.y -= Stats.displayMenu.height/2;						// generate textfields			var titleField:TextField = new TextField();			titleField.x = 10;			titleField.y = 10;			titleField.defaultTextFormat = new TextFormat("Verdana", 10, 0xFFFFFF, true, null,null,null,null,"center");			titleField.text = "AWAY3D PROJECT STATS";			titleField.height = 20;			titleField.width = 244;			titleField.x = 3;			titleField.y = 3;			Stats.displayMenu.addChild(titleField);						var statsField:TextField = new TextField();			statsField.x = 10;			statsField.y = 22;			statsField.defaultTextFormat = new TextFormat("Verdana", 10, 0x000000);			statsField.autoSize = "left";			statsField.text = stats;			statsField.height = 15;			statsField.width = 200;			Stats.displayMenu.addChild(statsField);			 		}		public function applyShadow():void		{			var shadowfilter:DropShadowFilter = new DropShadowFilter(10, 45, 0x333333, .7, 5, 5, 1, 2, false, false, false);			Stats.displayMenu.filters = [shadowfilter];		}		// registration faces and types		public function register(type:String=null,facecount:int=0,url:String=""):void		{			if (type != null && facecount != 0) {				Stats.aTypes.push({type:type,facecount:facecount,url:(url == "")?"internal" : url});				Stats.totalFaces += facecount;				Stats.meshes += 1;			}		}		public function get stats():String		{ 			var stats:String= "- TOTAL FACES: "+Stats.totalFaces+"\n";			stats += "- TOTAL MESHES: "+Stats.meshes+"\n\n";			stats += "GEOMETRIE: "+"\n";			for (var i:int = 0;i<Stats.aTypes.length;i++){				stats += "   - "+Stats.aTypes[i].type+" , faces: "+Stats.aTypes[i].facecount+", url: "+Stats.aTypes[i].url+"\n";			}			stats += "\nAWAY3D VERSION "+Stats.VERSION+"."+Stats.REVISION;			return stats;		}	}}