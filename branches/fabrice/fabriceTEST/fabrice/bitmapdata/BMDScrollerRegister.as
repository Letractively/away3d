//:::::::::::::::::::::::::::::::::::::::::::::::::::::////	BMDScrollerRegister AS3 : created 06 september 2006//	class drives 1 or more bmd tiling objects, allowing you to scroll each objects on a non destructive way.//  ideal for game development.//  versie 1.0//	Last update: 06 juni 2007//  Author Fabrice Closier////:::::::::::::::::::::::::::::::::::::::::::::::::::::X//package nl.fabrice.bitmapdata {import flash.display.BitmapData;import nl.fabrice.bitmapdata.PixelScroller;//	public class BMDScrollerRegister {		//		private static var _instance:BMDScrollerRegister = null;		public static function getInstance():BMDScrollerRegister {			return _instance = (!_instance) ? new BMDScrollerRegister() : _instance;		}		public var aBMDRegister:Array;		public var destinationBMD:BitmapData;		//		public function BMDScrollerRegister() {			this.aBMDRegister = new Array();		}		public function setDestBMD(destBMD:BitmapData):void {			this.destinationBMD = destBMD;		}		public function addScroll(id:String, w:Number, h:Number, sourceBMD:BitmapData, xOffset:Number, yOffset:Number, bOffseter:Boolean):void {			var oScroll = new Object();			//this["o" + id] = new Object();						oScroll.id = id;			oScroll.object = new PixelScroller();			oScroll.object.buildNewScroll(id, w, h, sourceBMD, xOffset, yOffset);			//this["o" + id].index = this.aBMDRegister.length;			this.aBMDRegister.push(oScroll);		}		public function update(id:String, x:Number, y:Number, xOffset:Number, yOffset:Number):void {			//this.aBMDRegister[this["o" + id].index].object.updateXY(x, y);			//this.aBMDRegister[this["o" + id].index].object.getBMDUpdate(this.destinationBMD, xOffset, yOffset);			var obj = this.getObject(id);			obj.object.changeXY(this.destinationBMD,x, y);			obj.object.updateXY(this.destinationBMD, xOffset, yOffset);		}		public function change(id:String, x:Number, y:Number):void {			this.aBMDRegister[this["o" + id].index].object.changeXY(x, y);		}		public function getObject(id:String):Object {			for(var i:int = 0;i<this.aBMDRegister.length;i++){				if(this.aBMDRegister[i].id == id){					return this.aBMDRegister[i];				}			}			return null;			//return this.aBMDRegister[this["o" + id].index].object;		}	}}