package away3d.core.filter;    import away3d.cameras.*;    import away3d.containers.*;    import away3d.core.clip.*;    import away3d.core.draw.*;    import away3d.core.render.*;    /**    * Defines a maximum z value for rendering primitives    */    class ZDepthFilter implements IPrimitiveFilter {    	    	var _primitives:Array<Dynamic>;		var pri:DrawPrimitive;		var _maxZ:Float;    			/**		 * Creates a new <code>ZDepthFilter</code> object.		 *		 * @param	maxZ	A maximum allowed depth value for drawing primitives.		 */		function new(maxZ:Float){			_maxZ = maxZ;		}        		/**		 * @inheritDoc		 */        public function filter(primitives:Array<Dynamic>, scene:Scene3D, camera:Camera3D, clip:Clipping):Array<Dynamic>        {				_primitives = [];								for (pri in primitives) {					if (pri.screenZ < _maxZ)						_primitives.push(pri); 				}            	return _primitives;        }				/**		 * Used to trace the values of a filter.		 * 		 * @return A string representation of the filter object.		 */        public function toString():String        {            return "ZDepthFilter";        }    }