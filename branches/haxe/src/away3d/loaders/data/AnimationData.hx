package away3d.loaders.data;

import away3d.containers.ObjectContainer3D;
import flash.events.EventDispatcher;
import flash.utils.Dictionary;
import away3d.core.base.Object3D;
import away3d.animators.IMeshAnimation;


/**
 * Data class for the animation of a mesh.
 * 
 * @see away3d.loaders.data.MeshData
 */
class AnimationData  {
	
	/**
	 * String representing a vertex animation.
	 */
	public static inline var VERTEX_ANIMATION:String = "vertexAnimation";
	/**
	 * String representing a skin animation.
	 */
	public static inline var SKIN_ANIMATION:String = "skinAnimation";
	/**
	 * The name of the animation used as a unique reference.
	 */
	public var name:String;
	/**
	 * Reference to the animation object of the resulting animation.
	 */
	public var animation:IMeshAnimation;
	/**
	 * Reference to the time the animation starts.
	 */
	public var start:Float;
	/**
	 * Reference to the number of seconds the animation ends.
	 */
	public var end:Float;
	/**
	 * String representing the animation type.
	 */
	public var animationType:String;
	/**
	 * Dictonary of names representing the animation channels used in the animation.
	 */
	public var channels:Dictionary;
	

	public function clone(object:Object3D):AnimationData {
		
		var animationData:AnimationData = object.animationLibrary.addAnimation(name);
		animationData.start = start;
		animationData.end = end;
		animationData.animationType = animationType;
		animationData.animation = animation.clone(cast(object, ObjectContainer3D));
		return animationData;
	}

	// autogenerated
	public function new () {
		this.start = Math.POSITIVE_INFINITY;
		this.end = 0;
		this.animationType = SKIN_ANIMATION;
		this.channels = new Dictionary();
		
	}

	

}

