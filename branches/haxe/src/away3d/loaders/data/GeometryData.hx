package away3d.loaders.data;

import away3d.core.base.Geometry;
import away3d.core.base.Vertex;
import away3d.core.base.UV;
import away3d.loaders.data.FaceData;
import away3d.materials.IMaterial;
import away3d.animators.skin.SkinVertex;
import away3d.animators.skin.SkinController;


/**
 * Data class for the geometry data used in a mesh object
 */
class GeometryData  {
	
	/**
	 * The name of the geometry used as a unique reference.
	 */
	public var name:String;
	/**
	 * Array of vertex objects.
	 *
	 * @see away3d.core.base.Vertex
	 */
	public var vertices:Array<Vertex>;
	/**
	 * Array of uv objects.
	 *
	 * see@ away3d.core.base.UV
	 */
	public var uvs:Array<UV>;
	/**
	 * Array of face data objects.
	 *
	 * @see away3d.loaders.data.FaceData
	 */
	public var faces:Array<FaceData>;
	/**
	 * Optional assigned materials to the geometry.
	 */
	public var materials:Array<IMaterial>;
	/**
	 * Defines whether both sides of the geometry are visible
	 */
	public var bothsides:Bool;
	/**
	 * Array of skin vertex objects used in bone animations
	 * 
	 * @see away3d.animators.skin.SkinVertex
	 */
	public var skinVertices:Array<SkinVertex>;
	/**
	 * Array of skin controller objects used in bone animations
	 * 
	 * @see away3d.animators.skin.SkinController
	 */
	public var skinControllers:Array<SkinController>;
	/**
	 * Reference to the geometry object of the resulting geometry.
	 */
	public var geometry:Geometry;
	/**
	 * Reference to the xml object defining the geometry.
	 */
	public var geoXML:Xml;
	/**
	 * Reference to the xml object defining the controller.
	 */
	public var ctrlXML:Xml;
	/**
	 * Returns the maximum x value of the geometry data
	 */
	public var maxX:Float;
	/**
	 * Returns the minimum x value of the geometry data
	 */
	public var minX:Float;
	/**
	 * Returns the maximum y value of the geometry data
	 */
	public var maxY:Float;
	/**
	 * Returns the minimum y value of the geometry data
	 */
	public var minY:Float;
	/**
	 * Returns the maximum z value of the geometry data
	 */
	public var maxZ:Float;
	/**
	 * Returns the minimum z value of the geometry data
	 */
	public var minZ:Float;
	

	

	// autogenerated
	public function new () {
		this.vertices = [];
		this.uvs = [];
		this.faces = [];
		this.materials = [];
		this.skinVertices = new Array<SkinVertex>();
		this.skinControllers = new Array<SkinController>();
		
	}

	

}

