package awaybuilder.abstracts;

import flash.display.BitmapData;
import flash.display.DisplayObject;
import flash.events.EventDispatcher;
import away3d.containers.View3D;
import awaybuilder.interfaces.IAssetContainer;
import awaybuilder.interfaces.IBuilder;
import awaybuilder.interfaces.ISceneContainer;
import awaybuilder.vo.SceneCameraVO;
import awaybuilder.vo.SceneGeometryVO;


class AbstractBuilder extends EventDispatcher, implements IBuilder, implements IAssetContainer, implements ISceneContainer {
	
	

	public function new() {
		// autogenerated
		super();
		
		OPPOSITE_OR[X | X] = N;
		OPPOSITE_OR[XY | X] = Y;
		OPPOSITE_OR[XZ | X] = Z;
		OPPOSITE_OR[XYZ | X] = YZ;
		OPPOSITE_OR[Y | Y] = N;
		OPPOSITE_OR[XY | Y] = X;
		OPPOSITE_OR[XYZ | Y] = XZ;
		OPPOSITE_OR[YZ | Y] = Z;
		OPPOSITE_OR[Z | Z] = N;
		OPPOSITE_OR[XZ | Z] = X;
		OPPOSITE_OR[XYZ | Z] = XY;
		OPPOSITE_OR[YZ | Z] = Y;
		SCALINGS[1] = [1, 1, 1];
		SCALINGS[2] = [-1, 1, 1];
		SCALINGS[4] = [-1, 1, -1];
		SCALINGS[8] = [1, 1, -1];
		SCALINGS[16] = [1, -1, 1];
		SCALINGS[32] = [-1, -1, 1];
		SCALINGS[64] = [-1, -1, -1];
		SCALINGS[128] = [1, -1, -1];
		
	}

	////////////////////////////////////////////////////////////////////////////////
	//
	// Public Methods
	//
	////////////////////////////////////////////////////////////////////////////////
	public function build(view:View3D, sections:Array<Dynamic>):Void {
		
	}

	public function addBitmapDataAsset(id:String, data:BitmapData):Void {
		
	}

	public function addDisplayObjectAsset(id:String, data:DisplayObject):Void {
		
	}

	public function addColladaAsset(id:String, data:Xml):Void {
		
	}

	public function getCameraById(id:String):SceneCameraVO {
		
		var vo:SceneCameraVO = new SceneCameraVO();
		vo.id = id;
		return vo;
	}

	public function getGeometryById(id:String):SceneGeometryVO {
		
		var vo:SceneGeometryVO = new SceneGeometryVO();
		vo.id = id;
		return vo;
	}

	public function getCameras():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

	public function getGeometry():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

	public function getSections():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

}

