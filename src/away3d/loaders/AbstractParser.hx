package away3d.loaders;

import flash.events.EventDispatcher;
import flash.events.Event;
import away3d.core.base.Object3D;
import away3d.events.ParserEvent;


// use namespace arcane;

class AbstractParser extends EventDispatcher  {
	public var parsedChunks(getParsedChunks, null) : Int;
	public var totalChunks(getTotalChunks, null) : Int;
	
	/** @private */
	public var _totalChunks:Int;
	/** @private */
	public var _parsedChunks:Int;
	/** @private */
	public var _parsesuccess:ParserEvent;
	/** @private */
	public var _parseerror:ParserEvent;
	/** @private */
	public var _parseprogress:ParserEvent;
	/**
	 * 3d container object used for storing the parsed 3ds object.
	 */
	public var container:Object3D;
	

	/** @private */
	public function notifyProgress():Void {
		
		if (_parseprogress == null) {
			_parseprogress = new ParserEvent();
		}
		dispatchEvent(_parseprogress);
	}

	/** @private */
	public function notifySuccess():Void {
		
		if (_parsesuccess == null) {
			_parsesuccess = new ParserEvent();
		}
		dispatchEvent(_parsesuccess);
	}

	/** @private */
	public function notifyError():Void {
		
		if (_parseerror == null) {
			_parseerror = new ParserEvent();
		}
		dispatchEvent(_parseerror);
	}

	/**
	 * Returns the total number of data chunks parsed
	 */
	public function getParsedChunks():Int {
		
		return _parsedChunks;
	}

	/**
	 * Returns the total number of data chunks available
	 */
	public function getTotalChunks():Int {
		
		return _totalChunks;
	}

	/**
	 * Processes the next chunk in the parser
	 */
	public function parseNext():Void {
		
		notifySuccess();
	}

	// autogenerated
	public function new () {
		super();
		this._totalChunks = 0;
		this._parsedChunks = 0;
		
	}

	

}

