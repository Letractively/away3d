package away3d.core.light;



/**
 * Array for storing light primitives.
 */
class LightArray implements ILightConsumer {
	public var ambients(getAmbients, null) : Array<AmbientLight>;
	public var directionals(getDirectionals, null) : Array<DirectionalLight>;
	public var points(getPoints, null) : Array<PointLight>;
	public var numLights(getNumLights, null) : Int;
	
	private var _ambients:Array<AmbientLight>;
	private var _directionals:Array<DirectionalLight>;
	private var _points:Array<PointLight>;
	private var _numLights:Int;
	

	/**
	 * The ambient light primitives stored in the consumer.
	 */
	public function getAmbients():Array<AmbientLight> {
		
		return _ambients;
	}

	/**
	 * The directional light primitives stored in the consumer.
	 */
	public function getDirectionals():Array<DirectionalLight> {
		
		return _directionals;
	}

	/**
	 * The point light primitives stored in the consumer.
	 */
	public function getPoints():Array<PointLight> {
		
		return _points;
	}

	/**
	 * The total number of light primitives stored in the consumer.
	 */
	public function getNumLights():Int {
		
		return _numLights;
	}

	/**
	 * @inheritDoc
	 */
	public function ambientLight(ambient:AmbientLight):Void {
		
		_ambients.push(ambient);
		_numLights++;
	}

	/**
	 * @inheritDoc
	 */
	public function directionalLight(directional:DirectionalLight):Void {
		
		_directionals.push(directional);
		_numLights++;
	}

	/**
	 * @inheritDoc
	 */
	public function pointLight(point:PointLight):Void {
		
		_points.push(point);
		_numLights++;
	}

	/**
	 * Clears all light primitives from the consumer.
	 */
	public function clear():Void {
		
		_ambients = [];
		_directionals = [];
		_points = [];
		_numLights = 0;
	}

	// autogenerated
	public function new () {
		
	}

	

}

