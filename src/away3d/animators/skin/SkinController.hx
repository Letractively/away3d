package away3d.animators.skin;

import away3d.haxeutils.HashMap;
import away3d.containers.ObjectContainer3D;
import away3d.core.base.Object3D;
import away3d.core.math.Matrix3D;
import away3d.haxeutils.Hashable;

class SkinController extends Hashable {
	
	public var name:String;
	public var joint:ObjectContainer3D;
	public var bindMatrix:Matrix3D;
	public var sceneTransform:Matrix3D;
	public var inverseTransform:Matrix3D;
	public var updated:Bool;
	

	public function update():Void {
		
		if (joint == null) {
			return;
		}
		if (untyped joint.scene.updatedObjects.indexOf(joint) == -1) {
			updated = false;
			return;
		} else {
			updated = true;
		}
		sceneTransform.multiply(joint.sceneTransform, bindMatrix);
		sceneTransform.multiply(inverseTransform, sceneTransform);
	}

	// autogenerated
	public function new () {
		super();
		this.sceneTransform = new Matrix3D();
		
	}

	

}

