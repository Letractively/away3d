package awaybuilder.abstracts;

import flash.display.BitmapData;
import flash.display.DisplayObject;
import flash.events.EventDispatcher;
import away3d.containers.View3D;
import awaybuilder.interfaces.IAssetContainer;
import awaybuilder.interfaces.IBuilder;
import awaybuilder.interfaces.ISceneContainer;
import awaybuilder.vo.SceneCameraVO;
import awaybuilder.vo.SceneGeometryVO;


class AbstractBuilder extends EventDispatcher, implements IBuilder, implements IAssetContainer, implements ISceneContainer {
	
	

	public function new() {
		// autogenerated
		super();
		
		
	}

	////////////////////////////////////////////////////////////////////////////////
	//
	// Public Methods
	//
	////////////////////////////////////////////////////////////////////////////////
	public function build(view:View3D, sections:Array<Dynamic>):Void {
		
	}

	public function addBitmapDataAsset(id:String, data:BitmapData):Void {
		
	}

	public function addDisplayObjectAsset(id:String, data:DisplayObject):Void {
		
	}

	public function addColladaAsset(id:String, data:Xml):Void {
		
	}

	public function getCameraById(id:String):SceneCameraVO {
		
		var vo:SceneCameraVO = new SceneCameraVO();
		vo.id = id;
		return vo;
	}

	public function getGeometryById(id:String):SceneGeometryVO {
		
		var vo:SceneGeometryVO = new SceneGeometryVO();
		vo.id = id;
		return vo;
	}

	public function getCameras():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

	public function getGeometry():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

	public function getSections():Array<Dynamic> {
		
		return new Array<Dynamic>();
	}

}

