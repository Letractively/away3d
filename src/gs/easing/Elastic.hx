package gs.easing;



class Elastic  {
	
	private static inline var _2PI:Float = Math.PI * 2;
	

	public static function easeIn(t:Float, b:Float, c:Float, d:Float, ?a:Float=0, ?p:Float=0):Float {
		
		var s:Float;
		if (t == 0) {
			return b;
		}
		if ((t /= d) == 1) {
			return b + c;
		}
		if (p == 0) {
			p = d * .3;
		}
		if (a == 0 || a < Math.abs(c)) {
			a = c;
			s = p / 4;
		} else {
			s = p / _2PI * Math.asin(c / a);
		}
		return -(a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * _2PI / p)) + b;
	}

	public static function easeOut(t:Float, b:Float, c:Float, d:Float, ?a:Float=0, ?p:Float=0):Float {
		
		var s:Float;
		if (t == 0) {
			return b;
		}
		if ((t /= d) == 1) {
			return b + c;
		}
		if (p == 0) {
			p = d * .3;
		}
		if (a == 0 || a < Math.abs(c)) {
			a = c;
			s = p / 4;
		} else {
			s = p / _2PI * Math.asin(c / a);
		}
		return (a * Math.pow(2, -10 * t) * Math.sin((t * d - s) * _2PI / p) + c + b);
	}

	public static function easeInOut(t:Float, b:Float, c:Float, d:Float, ?a:Float=0, ?p:Float=0):Float {
		
		var s:Float;
		if (t == 0) {
			return b;
		}
		if ((t /= d / 2) == 2) {
			return b + c;
		}
		if (p == 0) {
			p = d * (.3 * 1.5);
		}
		if (a == 0 || a < Math.abs(c)) {
			a = c;
			s = p / 4;
		} else {
			s = p / _2PI * Math.asin(c / a);
		}
		if (t < 1) {
			return -.5 * (a * Math.pow(2, 10 * (t -= 1)) * Math.sin((t * d - s) * _2PI / p)) + b;
		}
		return a * Math.pow(2, -10 * (t -= 1)) * Math.sin((t * d - s) * _2PI / p) * .5 + c + b;
	}

	// autogenerated
	public function new () {
		
		OPPOSITE_OR[X | X] = N;
		OPPOSITE_OR[XY | X] = Y;
		OPPOSITE_OR[XZ | X] = Z;
		OPPOSITE_OR[XYZ | X] = YZ;
		OPPOSITE_OR[Y | Y] = N;
		OPPOSITE_OR[XY | Y] = X;
		OPPOSITE_OR[XYZ | Y] = XZ;
		OPPOSITE_OR[YZ | Y] = Z;
		OPPOSITE_OR[Z | Z] = N;
		OPPOSITE_OR[XZ | Z] = X;
		OPPOSITE_OR[XYZ | Z] = XY;
		OPPOSITE_OR[YZ | Z] = Y;
		SCALINGS[1] = [1, 1, 1];
		SCALINGS[2] = [-1, 1, 1];
		SCALINGS[4] = [-1, 1, -1];
		SCALINGS[8] = [1, 1, -1];
		SCALINGS[16] = [1, -1, 1];
		SCALINGS[32] = [-1, -1, 1];
		SCALINGS[64] = [-1, -1, -1];
		SCALINGS[128] = [1, -1, -1];
	}

	

}

